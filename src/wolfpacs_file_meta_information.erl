 %%%-------------------------------------------------------------------
%% @doc File Meta Information.
%%
%% @end
%%%-------------------------------------------------------------------

-module(wolfpacs_file_meta_information).
-export([encode/1,
	 decode/1]).

%%-------------------------------------------------------------------
%% @doc Encod File Meta Information.
%%
%% @end
%%-------------------------------------------------------------------
-spec encode(binary()) -> binary().
encode(Data) ->
    <<>>.

%%-------------------------------------------------------------------
%% @doc Decode File Meta Information.
%%
%% @end
%%-------------------------------------------------------------------
-spec decode(binary()) -> {ok, binary(), binary()} | {error, binary()}.
decode(OrgData = <<_:1024, "DICM", Data/binary>>) ->
    wolfpacs_data_elements_explicit:decode(Data);
decode(Data) ->
    {error, Data}.

%%==============================================================================
%% Private
%%==============================================================================

%%==============================================================================
%% Test
%%==============================================================================

-include_lib("eunit/include/eunit.hrl").

encode_decode_test_() ->
    [].
